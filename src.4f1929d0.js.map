{"version":3,"sources":["js/refs.js","js/timer.js","index.js"],"names":["body","document","querySelector","daysC","hoursC","minsC","secsC","refs","options","weekday","year","month","day","hour","minute","currentDate","Date","toLocaleString","CountdownTimer","constructor","targetDate","markup","intID","deltaTime","start","setInterval","currentTime","now","days","Math","floor","hours","mins","secs","insertValues","stop","clearInterval","d","h","m","s","textContent","myTimer"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAe,uBAC/BE,OAAQH,SAASC,cAAe,wBAChCG,MAAOJ,SAASC,cAAe,uBAC/BI,MAAOL,SAASC,cAAe,wBALpB,QAAA,QAAA;;AC+Df,aA/DA,IAAA,EAAA,EAAA,QAAA,WA+DA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA5DA,MAAM,KAAEF,EAAF,MAAQG,EAAR,OAAeC,EAAf,MAAuBC,EAAvB,MAA8BC,GAAUC,EAA9C,QAKMC,EAAU,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,WAEJC,GAAc,IAAIC,MAAOC,eAAe,QAAST,GAEvD,MAAMU,EACJC,YAAYC,EAAYC,GACjBA,KAAAA,OAASA,EACTD,KAAAA,WAAaA,EACbE,KAAAA,MAAQ,KACRC,KAAAA,UAAY,EAEnBC,QACOF,KAAAA,MAAQG,YAAY,KACnBC,IAAAA,EAAcV,KAAKW,MAClBJ,KAAAA,UAAY,KAAKH,WAAaM,EAC7BE,MAAAA,EAAOC,KAAKC,MAAM,KAAKP,UAAa,OACpCQ,EAAQF,KAAKC,MAAO,KAAKP,UAAa,MAAyB,MAC/DS,EAAOH,KAAKC,MAAO,KAAKP,UAAa,KAAoB,KACzDU,EAAOJ,KAAKC,MAAO,KAAKP,UAAa,IAAc,KACpDW,KAAAA,aAAaN,EAAMG,EAAOC,EAAMC,IACpC,KAELE,OACEC,cAAc,KAAKd,OAGrBY,aAAaG,EAAGC,EAAGC,EAAGC,GACd,MAAA,MAAErC,EAAF,OAASC,EAAT,MAAiBC,EAAjB,MAAwBC,GAAU,KAAKe,OAC7ClB,EAAMsC,YAAcJ,EACpBjC,EAAOqC,YAAcH,EACrBjC,EAAMoC,YAAcF,EACpBjC,EAAMmC,YAAcD,GASxB,MAAME,EAAU,IAAIxB,EAClB,IAAIF,KAAM,eACV,CACEb,MAAAA,EACAC,OAAAA,EACAC,MAAAA,EACAC,MAAAA,IAGJoC,EAAQlB;;AC/DR,aAAA,QAAA","file":"src.4f1929d0.js","sourceRoot":"../src","sourcesContent":["export default {\n    body: document.querySelector(\"body\"),\n    daysC: document.querySelector(`[data-value=\"days\"]`),\n    hoursC: document.querySelector(`[data-value=\"hours\"]`),\n    minsC: document.querySelector(`[data-value=\"mins\"]`),\n    secsC: document.querySelector(`[data-value=\"secs\"]`),\n}","import refs from './refs';\n// import timerTamplate from './timerTamplate';\n\nconst { body, daysC, hoursC, minsC, secsC } = refs\n\n// body.insertAdjacentHTML('afterbegin', timerTamplate)\n\n\nconst options = {\n  weekday: 'long',\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit',\n}\nconst currentDate = new Date().toLocaleString('Uk-uk', options);\n\nclass CountdownTimer {\n  constructor(targetDate, markup) {\n    this.markup = markup;\n    this.targetDate = targetDate;\n    this.intID = null;\n    this.deltaTime = 0;\n  }\n  start() {\n    this.intID = setInterval(() => {\n      let currentTime = Date.now();\n      this.deltaTime = this.targetDate - currentTime;\n      const days = Math.floor(this.deltaTime / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((this.deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const mins = Math.floor((this.deltaTime % (1000 * 60 * 60)) / (1000 * 60));\n      const secs = Math.floor((this.deltaTime % (1000 * 60)) / 1000);\n      this.insertValues(days, hours, mins, secs)\n    }, 1000)\n  }\n  stop() {\n    clearInterval(this.intID)\n  }\n\n  insertValues(d, h, m, s) {\n    const { daysC, hoursC, minsC, secsC } = this.markup;\n    daysC.textContent = d;\n    hoursC.textContent = h;\n    minsC.textContent = m;\n    secsC.textContent = s;\n  }\n\n  //==============\n  // pad(value) {\n  //   return String(value).padStart(2, '0')\n  // }\n}\n\nconst myTimer = new CountdownTimer(\n  new Date ('Jan 1, 2022'),\n  {\n    daysC,\n    hoursC,\n    minsC,\n    secsC\n  }\n);\nmyTimer.start()","import './js/timer.js';\n"]}